spring:
  datasource:
    hikari:
     jdbc-url: jdbc:h2:mem://localhost/~/testdb;MODE=MYSQL # url만 있어도 된다.
#     username: sa
#     password: 
#     driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect # h2를 MYSQL 모드로 실행했을 때 출력되는 쿼리 로그를 MYSQL 버전으로 변경
        storage_engine: innodb
        format_sql: true # To beautify or pretty print the SQL
        show_sql: true # show sql
  h2:
    console:
      enabled: true

logging:
  level:
    org.hibernate:
      type.descriptor.sql: trace # show parameter binding
      SQL: DEBUG
      
# 내장 DB인 H2를 제외한 DB에서 Spring Batch를 사용하기 위해서는, DB에 Spring Batch Meta Data Table을 직접 생성해줘야 합니다.
# H2는 이와 같은 테이블을 Boot Application이 실행할 때 자동으로 생성해줍니다.

# meta data table
# 이때 Meta Data란 데이터를 설명하는 데이터라고 해석할 수 있습니다.
# Spring Batch의 Meta Data는 다음과 같은 내용을 담고 있습니다.
# • 이전에 실행한 Job에는 어떠한 것들이 있는지
# • 최근 실패한 Batch Parameter가 어떤것들이 있고, 성공한 Job은 어떤것 들이 있는지
# • 실패한 Job을 다시 실행한다면 어디서 부터 시작하면 될지
# • 어떤 Job에 어떤 Step들이 있었고, Step들 중 성공한 Step과 실패한 Step 들은 어떤 것들이 있는지
# 위와 같이 Meta Data는 Spring Batch 어플리케이션을 운영하기 위한 데이터를 가지고 있으며, 여러개의 테이블에 나눠져 담겨있게 됩니다.

# Spring Batch Meta Data Table을 생성하는 방법 : spring-batch-core-x.x.x.jar -> org.springframework.batch.core -> schema-해당db.sql -> 이를 그대로 복사해 create table 구문으로 table을 생성
